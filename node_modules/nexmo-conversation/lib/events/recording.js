/*
 * Conversation SDK
 *  Message object model
 *
 * Copyright (c) Nexmo Inc. 2015
 */

var WildEmitter = require('wildemitter');
var Event = require('./event').Event;

var Recording = function(conversation, params) {
    this.conversation = conversation;
    // Map the params
    for (var key in params) {
        this[key] = params[key];
    }
    // call WildEmitter constructor
    WildEmitter.call(this);
};

Recording.prototype = new Event(this.conversation, this);

Recording.prototype.stop = function(params) {
    // Invoke the delete on the event object
    this.del(params);
};

Recording.prototype._handleEvent = function(event) {
    var self = this;
    switch (event.type) {
        default: self.emit(event.type, event.body);
        break;
    }
};

module.exports = {
    Recording: Recording
};