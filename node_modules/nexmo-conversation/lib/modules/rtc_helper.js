/*
 * Conversation SDK
 *  RtcHelper object model
 *
 * Copyright (c) Nexmo Inc. 2017
 */

// Conversation Client Error
var ConversationClientError = require('../conversationClientError');
adapter = require('webrtc-adapter');
var browserDetect = require('detect-browser');


var NexmoApiError = ConversationClientError.NexmoApiError;
var NexmoClientError = ConversationClientError.NexmoClientError;
var browser = browserDetect.detect();
/**
 * A single RtcHelper Object.
 * @class RtcHelper
 * @ignore
 */
var RtcHelper = function() {

};

RtcHelper.prototype.getUserAudio = function() {
    return navigator.mediaDevices.getUserMedia({
        video: false,
        audio: true
    });
};

RtcHelper.prototype.getUserVideo = function() {
    return navigator.mediaDevices.getUserMedia({
        video: true,
        audio: true
    });
};

RtcHelper.prototype.getUserScreen = function() {
    var self = this;
    return self.checkBrowserRunOnHttps()
        .then(function() {
            return self.checkChromeExtensionIsInstalled();
        })
        .then(function() {
            return self.getShareScreenStream();
        })
};

RtcHelper.prototype.checkBrowserRunOnHttps = function() {
    var self = this;
    return new Promise(function(resolve, reject) {
        if (self._getWindowLocationProtocol() !== 'https:') {
            reject(new NexmoClientError('error:media:unsupported-browser'));
        }
        resolve();
    })

};

RtcHelper.prototype.checkChromeExtensionIsInstalled = function() {
    var self = this;
    return new Promise(function(resolve, reject) {
        if (self._getBrowserName() === 'chrome') {
            if (document.getElementById('janus-extension-installed') !== null) {
                resolve();
            } else {
                reject(new NexmoClientError('error:media:unsupported-browser'));
            }
        } else {
            // Firefox or others, no need for the extension (but this doesn't mean it will work)
            return resolve();
        }
    })

};

RtcHelper.prototype.getShareScreenStream = function() {
    var self = this;
    switch (self._getBrowserName()) {
        case 'chrome':
            return self.chromeGetShareScreenStream();
        case 'firefox':
        default:
            return Promise.reject(new NexmoClientError('error:media:unsupported-browser'));
    }
};

RtcHelper.prototype.chromeGetShareScreenStream = function() {
    var self = this;
    return new Promise(function(resolve, reject) {
        window.addEventListener('message', self.shareScreenEventHandler(resolve, reject));
        window.postMessage({
            type: 'janusGetScreen'
        }, '*');
    })

};

RtcHelper.prototype.shareScreenEventHandler = function(resolve, reject) {
    return function(event) {
        if (event.origin !== window.location.origin) {
            // console.log('Janus Extension - different domain');
            return reject(new NexmoClientError('Janus Extension - different domain'));
        }
        if (event.data.type === 'janusGotScreen') {
            if (event.data.sourceId !== '') {
                var constraints = {
                    audio: false,
                    video: {
                        mandatory: {
                            chromeMediaSource: 'desktop',
                            maxWidth: window.screen.width,
                            maxHeight: window.screen.height,
                            maxFrameRate: 15
                        },
                        optional: []
                    }
                };
                constraints.video.mandatory.chromeMediaSourceId = event.data.sourceId;
                return navigator.mediaDevices.getUserMedia(constraints).then((s) => {
                    return resolve(s);
                }).catch((e) => {
                    var errorDescription = 'Janus Extension shareScreenWebRTCService.getStream error: ' + e;
                    // console.log(errorDescription);
                    return reject(new NexmoClientError(errorDescription));
                });
            } else {
                return reject(new NexmoClientError('janusGotScreen - invalid source id'));
            }
        } else if (event.data.type === 'janusGetScreenPending') {
            // console.log('Janus Extension - janusGetScreenPending');
        } else {
            var eventDescription = 'Janus Extension - Other event: ' + event.data.type;
            // console.log(eventDescription);
        }
    }
};

RtcHelper.prototype.firefoxGetShareScreenStream = function() {
    Promise.reject(new NexmoClientError('Not support'));
};

RtcHelper.prototype._getWindowLocationProtocol = function() {
    return window.location.protocol;
}

RtcHelper.prototype._getBrowserName = function() {
    return browser.name;
}

module.exports = {
    RtcHelper: RtcHelper
};