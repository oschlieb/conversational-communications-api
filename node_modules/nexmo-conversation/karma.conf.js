// Karma configuration
module.exports = function(config) {
	config.set({
		// base path that will be used to resolve all patterns (eg. files, exclude)
		basePath: '',
		// frameworks to use
		// available frameworks: https://npmjs.org/browse/keyword/karma-adapter
		frameworks: ['browserify', 'source-map-support', 'mocha'],
		browserify: {
			debug: true,
			transform: [
				[
					'browserify-istanbul',
					{
						ignore: ['**/lib/modules/cache-worker.js'],
						instrumenterConfig: {
							embedSource: true
						}
					}
				]
			]
		},

		// list of files / patterns to load in the browser
		files: [
			'test/**/*.js'
		],

		// list of files to exclude
		exclude: [''],

		// preprocess matching files before serving them to the browser
		// available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor
		preprocessors: {
			// 'lib/**/*.js': ['browserify'],
			'test/**/*.js': ['browserify']
		},
		client: {
			captureConsole: true
		},

		// test results reporter to use
		// available reporters: https://npmjs.org/browse/keyword/karma-reporter
		reporters: ['mocha', 'junit', 'coverage'],

		coverageReporter: {
			reporters: [{
					type: 'cobertura',
					dir: 'cobertura/',
					file: 'coverage.xml'
				},
				{
					type: 'html',
					subdir: 'html'
				}
			]
		},
		// web server port
		port: 9876,
		// configure custom browsers
		// available browser launchers: https://npmjs.org/browse/keyword/karma-launcher
		// is called travis but it will work also anywhere you set xbuffer
		// configured in grunt
		// browsers: ['Chrome_fake_media', 'Chrome_travis_ci'],
		customLaunchers: {
			Chrome_fake_media: {
				base: 'Chrome',
				flags: ['--remote-debugging-port=9333', '--use-fake-ui-for-media-stream']
			},
			Chrome_travis_ci: {
				base: 'Chrome',
				flags: ['--headless', '--remote-debugging-port=9333', '--no-sandbox', '--use-fake-ui-for-media-stream']
			}
		},
		// level of logging
		// possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG
		logLevel: config.LOG_ERROR,
		// Concurrency level
		singleRun: true,
		concurrency: Infinity
	});
};