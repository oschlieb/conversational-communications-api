/**
 * Grunt tasks configuration file
 * env: test: you are in travis (activated by env var CI=true)
 * production: production (activated by env var NODE_ENV=production)
 * development: development env, watch mode activated (activated by env var NODE_ENV=development or NODE_ENV empty)
 */

module.exports = function(grunt) {
	'use strict';

	// Load the plugins that provide the tasks we specified in package.json
	require('load-grunt-tasks')(grunt);

	var env_vars = process.env;
	var node_env = grunt.option('env') || env_vars.NODE_ENV || 'development';
	var is_interactive = grunt.option('watch') || false;
	var karmaTask = grunt.option('karmaTask') || 'default';

	var ws_url = grunt.option('ws_url') || env_vars.NEXMO_SDK_WS_URL || 'https://ws.nexmo.com';
	var ips_url = grunt.option('ips_url') || env_vars.NEXMO_SDK_IPS_URL || 'https://api.nexmo.com/v1/image';

	if (node_env === 'production') {
		ws_url = 'https://ws.nexmo.com';
		ips_url = 'https://api.nexmo.com/v1/image';
	}


	grunt.initConfig({
		pkg: grunt.file.readJSON('package.json'),
		env_vars: env_vars,
		node_env: node_env,
		is_interactive: is_interactive,
		src_dir: 'lib/**/**.js',
		dest: 'dist/conversationClient.js',
		ws_url: ws_url,
		ips_url: ips_url,
		jsdoc: {
			documentation: {
				src: ['./lib/**/*.js', 'README.md'],
				options: {
					destination: "docs"
				}
			}
		},
		browserify: {
			client: {
				src: ['<%= src_dir  %>'],
				dest: '<%= dest  %>',
				options: {
					watch: is_interactive,
					keepAlive: is_interactive,
					transform: [
						["browserify-replace", {
							replace: [{
								from: '@@environment',
								to: '<%= node_env %>'
							}, {
								from: '@@SDK_version',
								to: '<%= pkg.version %>'
							}, {
								from: '@@ws_url',
								to: '<%= ws_url %>'
							}, {
								from: '@@ips_url',
								to: '<%= ips_url %>'
							}, {
								from: '@@repository',
								to: '<%= pkg.repository %>'
							}]
						}]
					]
				}
			}
		},
		karma: {
			default: {
				configFile: 'karma.conf.js',
				browsers: ['Chrome_fake_media'],
				autoWatch: is_interactive,
				singleRun: !is_interactive
			},
			xvfb: {
				configFile: 'karma.conf.js',
				browsers: ['Chrome_travis_ci'],
				autoWatch: false,
				singleRun: true
			}
		}
	});

	grunt.loadNpmTasks('grunt-browserify');

	grunt.registerTask('default', ['browserify']);
	grunt.registerTask('build', ['browserify']);
	grunt.registerTask('test', ['karma:' + karmaTask]);
	grunt.registerTask('docs', ['documentation'], ['jsdoc:documentation']);
}