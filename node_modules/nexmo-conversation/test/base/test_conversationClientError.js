/*
 * Conversation Client Error Test
 *
 * Copyright (c) Nexmo Inc. 2017
 */


var chai = require('chai');

var expect = chai.expect;

var ConversationClientError = require('../../lib/conversationClientError');

var NexmoApiError = ConversationClientError.NexmoApiError;
var NexmoClientError = ConversationClientError.NexmoClientError;

describe('Conversation Client Error Consistency.', function() {

	it('Should return the expected API Error when we initialise from an object with type and description', function() {
		var expected = {
			type: 'fake:error:type',
			description: 'Just a fake description'
		};
		var result = new NexmoApiError(expected);
		expect(result).to.be.an('object');
		expect(result.type).to.equal(expected.type);
		expect(result.description).to.equal(expected.description);
		expect(result.stack).to.be.a('string');
	});

	it('Should return client error from the list', function() {
		var result = new NexmoClientError("error:getUserMedia:permissions");
		expect(result).to.be.an('object');
		expect(result.type).to.equal("error:getUserMedia:permissions");
		expect(result.description).to.equal("missing getUserMedia permissions");
		expect(result.stack).to.be.a('string');
	});

	it('Should forward an error when the error is not in the NexmoClientErrorTypes', function() {
		var result = new NexmoClientError("error:unknown");
		expect(result).to.be.an('object');
		expect(result).to.have.property("stack");
		expect(result).to.have.property("name");
		expect(result).to.have.property("message");
		expect(result.message).to.equal("error:unknown");
	});

	it('Should allow API error with extra properties', function() {
		var expected = {
			type: 'fake:error:type',
			description: 'Just a fake description',
			extra_property: 'An extra field'
		};
		var result = new NexmoApiError(expected);
		expect(result).to.be.an('object');
		expect(result.type).to.equal(expected.type);
		expect(result.description).to.equal(expected.description);
		expect(result.stack).to.be.a('string');
		expect(result.extra_property).to.equal(expected.extra_property);
	});
});